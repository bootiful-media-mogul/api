name: Deploy

env:


#  BLOG_INDEX_REBUILD_KEY : ${{ secrets.BLOG_INDEX_REBUILD_KEY }}
#  SPRING_R2DBC_URL: r2dbc:postgresql://${{secrets.JOSHLONG_DB_HOST}}/${{ secrets.JOSHLONG_DB_SCHEMA }}
#  SPRING_R2DBC_PASSWORD: ${{ secrets.JOSHLONG_DB_PASSWORD }}
#  SPRING_R2DBC_USERNAME: ${{ secrets.JOSHLONG_DB_USERNAME }}
#  SPRING_RABBITMQ_HOST: ${{ secrets.TWITTER_SERVICE_RABBITMQ_HOST }}
#  SPRING_RABBITMQ_PASSWORD: ${{ secrets.TWITTER_SERVICE_RABBITMQ_PASSWORD }}
#  SPRING_RABBITMQ_PORT: ${{ secrets.TWITTER_SERVICE_RABBITMQ_PORT }}
#  SPRING_RABBITMQ_USERNAME: ${{ secrets.TWITTER_SERVICE_RABBITMQ_USERNAME }}
#  SPRING_RABBITMQ_VIRTUAL_HOST: ${{ secrets.TWITTER_SERVICE_RABBITMQ_VIRTUAL_HOST }}
#  BOOTIFUL_PROMOTION_PLAYLIST_IDS: ${{ secrets.BOOTIFUL_PROMOTION_PLAYLIST_IDS }}
#  BOOTIFUL_YOUTUBE_API_KEY: ${{ secrets.BOOTIFUL_YOUTUBE_API_KEY }}
#  BOOTIFUL_TWITTER_CLIENT_ID: ${{ secrets.TWITTER_CLIENTS_YOUTUBE_CLIENT_ID }}
#  BOOTIFUL_TWITTER_CLIENT_SECRET: ${{ secrets.TWITTER_CLIENTS_YOUTUBE_CLIENT_SECRET }}
#  APP_NAME: joshlong-api
#  GKE_CLUSTER:   ${{ secrets.GKE_CLUSTER }}
#  GCLOUD_ZONE:  ${{ secrets.GCLOUD_ZONE }}
#  NS_NAME:  ${{ secrets.NS_NAME }}
  GCLOUD_SA_KEY:  ${{ secrets.GCLOUD_SA_KEY }}

on:
  push:
    branches: [ main ]


jobs:
  build-and-deploy:
    name: Build Container
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_SA_KEY }}'

      - run: |
          gcloud config set project $GCLOUD_PROJECT 
          gcloud --quiet auth configure-docker

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 21

      - name: Build Container
        run: |
          cd $GITHUB_WORKSPACE
          APP_NAME=mogul-service
          IMAGE_NAME=gcr.io/${GCLOUD_PROJECT}/${APP_NAME}
          echo "the image name is $IMAGE_NAME "
          ./mvnw -DskipTests=true spring-javaformat:apply clean package spring-boot:build-image -Dspring-boot.build-image.imageName=$IMAGE_NAME
          docker push $IMAGE_NAME

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Google Container Registry
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ env.GCLOUD_SA_KEY }}

#
#name: Push Container to GCR
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build-and-push:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#

#
#    - name: Build and push Docker image
#      uses: docker/build-push-action@v2
#      with:
#        context: .
#        file: Dockerfile
#        push: true
#        tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/your-image-name:latest
#
